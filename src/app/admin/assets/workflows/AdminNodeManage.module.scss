@use "@/app/_common/_variables" as *;
@use "sass:color";

// Node Management Container
.nodeManageContainer {
    display: flex;
    flex-direction: column;
    height: 100%;
    gap: $spacing-lg;
}

.nodeManageHeader {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: $spacing-md;

    .tabButtons {
        display: flex;
        border-radius: 0.5rem;
        overflow: hidden;
        border: 1px solid $gray-200;
        background: white;
    }

    .tabButton {
        display: flex;
        align-items: center;
        gap: $spacing-xs;
        padding: $spacing-sm $spacing-md;
        background: white;
        color: $gray-600;
        border: none;
        font-weight: 500;
        font-size: 0.875rem;
        cursor: pointer;
        transition: all 0.2s ease-in-out;
        border-right: 1px solid $gray-200;

        &:last-child {
            border-right: none;
        }

        &:hover:not(.active) {
            background: $gray-50;
            color: $gray-800;
        }

        &.active {
            background: $primary-blue;
            color: white;
        }
    }

    .refreshButton {
        display: flex;
        align-items: center;
        gap: $spacing-xs;
        padding: $spacing-sm $spacing-md;
        background: $primary-blue;
        color: white;
        border: none;
        border-radius: 0.5rem;
        font-weight: 500;
        font-size: 0.875rem;
        cursor: pointer;
        transition: all 0.2s ease-in-out;

        &:hover:not(:disabled) {
            background: color.scale($primary-blue, $lightness: -10%);
        }

        &:disabled {
            opacity: 0.6;
            cursor: not-allowed;
        }

        &.refreshing {
            .spinning {
                animation: spin 1s linear infinite;
            }
        }
    }
}

.nodeContent {
    display: flex;
    gap: $spacing-lg;
    flex: 1;
    min-height: 0;
}

.nodeTree {
    flex: 1;
    background: white;
    border-radius: 0.75rem;
    border: 1px solid $gray-200;
    overflow: hidden;
    display: flex;
    flex-direction: column;

    .treeHeader {
        padding: $spacing-md;
        border-bottom: 1px solid $gray-200;
        background: $gray-50;
        display: flex;
        justify-content: space-between;
        align-items: center;

        h3 {
            margin: 0;
            font-size: 1.125rem;
            font-weight: 600;
            color: $gray-900;
        }

        .nodeCount {
            font-size: 0.875rem;
            color: $gray-600;
            background: white;
            padding: 0.25rem 0.5rem;
            border-radius: 0.375rem;
            border: 1px solid $gray-200;
        }
    }

    .treeContent {
        flex: 1;
        overflow-y: auto;
        padding: $spacing-sm;
    }
}

.nodeDetail {
    flex: 1;
    background: white;
    border-radius: 0.75rem;
    border: 1px solid $gray-200;
    overflow: hidden;
    display: flex;
    flex-direction: column;

    .noSelection {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        height: 100%;
        color: $gray-500;
        text-align: center;
        padding: $spacing-xl;

        h3 {
            margin: $spacing-md 0 $spacing-sm 0;
            font-size: 1.25rem;
            font-weight: 500;
        }

        p {
            margin: 0;
            font-size: 0.875rem;
        }
    }
}

.nodeDetailContent {
    display: flex;
    flex-direction: column;
    height: 100%;

    .nodeDetailHeader {
        padding: $spacing-md;
        border-bottom: 1px solid $gray-200;
        background: $gray-50;
        display: flex;
        justify-content: space-between;
        align-items: flex-start;

        h3 {
            margin: 0;
            font-size: 1.125rem;
            font-weight: 600;
            color: $gray-900;
        }

        .nodeId {
            margin: $spacing-xs 0 0 0;
            font-size: 0.75rem;
            color: $gray-500;
            font-family: 'Monaco', 'Consolas', monospace;
        }

        .closeButton {
            background: none;
            border: none;
            font-size: 1.25rem;
            color: $gray-500;
            cursor: pointer;
            padding: 0.25rem;
            border-radius: 0.25rem;
            transition: all 0.2s ease-in-out;

            &:hover {
                background: $gray-200;
                color: $gray-700;
            }
        }
    }

    .nodeDetailBody {
        flex: 1;
        overflow-y: auto;
        padding: $spacing-md;

        .nodeSection {
            margin-bottom: $spacing-lg;

            &:last-child {
                margin-bottom: 0;
            }

            h4 {
                margin: 0 0 $spacing-sm 0;
                font-size: 1rem;
                font-weight: 600;
                color: $gray-900;
                display: flex;
                align-items: center;
                gap: $spacing-xs;
            }

            p {
                margin: 0 0 $spacing-sm 0;
                color: $gray-700;
                line-height: 1.5;
            }
        }

        .tagList {
            display: flex;
            flex-wrap: wrap;
            gap: $spacing-xs;

            .tag {
                background: $gray-100;
                color: $gray-700;
                padding: 0.25rem 0.5rem;
                border-radius: 0.375rem;
                font-size: 0.75rem;
                font-weight: 500;
            }
        }

        .parameterList {
            display: flex;
            flex-direction: column;
            gap: $spacing-sm;

            .parameterItem {
                background: $gray-50;
                border: 1px solid $gray-200;
                border-radius: 0.5rem;
                padding: $spacing-sm;

                .parameterHeader {
                    display: flex;
                    align-items: center;
                    gap: $spacing-sm;
                    margin-bottom: $spacing-xs;

                    .parameterName {
                        font-weight: 500;
                        color: $gray-900;
                    }

                    .parameterType {
                        background: $primary-blue;
                        color: white;
                        padding: 0.125rem 0.375rem;
                        border-radius: 0.25rem;
                        font-size: 0.75rem;
                        font-weight: 500;
                    }

                    .required {
                        color: $admin-danger;
                        font-weight: 600;
                    }
                }

                .parameterDescription {
                    margin: $spacing-xs 0;
                    font-size: 0.875rem;
                    color: $gray-600;
                    line-height: 1.4;
                }

                .parameterMeta {
                    font-size: 0.75rem;
                    color: $gray-500;
                    font-family: 'Monaco', 'Consolas', monospace;
                }
            }
        }
    }
}

// Tree Item Styles
.treeItem {
    margin-bottom: $spacing-xs;

    .treeItemHeader {
        display: flex;
        align-items: center;
        gap: $spacing-xs;
        padding: $spacing-xs $spacing-sm;
        cursor: pointer;
        border-radius: 0.375rem;
        transition: all 0.2s ease-in-out;

        &:hover {
            background: $gray-100;
        }

        .treeItemIcon {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 1rem;
            height: 1rem;
            color: $gray-500;
        }

        .treeItemName {
            flex: 1;
            font-weight: 500;
            color: $gray-900;
        }

        .itemCount {
            font-size: 0.75rem;
            color: $gray-500;
            background: $gray-100;
            padding: 0.125rem 0.375rem;
            border-radius: 0.25rem;
        }

        &.categoryHeader {
            font-weight: 600;
            color: #0277bd;

            .itemCount {
                background: #e0f2fe;
                color: #0277bd;
                border: 1px solid #81d4fa;
            }
        }

        &.functionHeader {
            font-weight: 500;
            padding-left: calc(#{$spacing-sm} + 1rem);

            .treeItemName {
                color: $gray-800;
            }
        }

        &.nodeHeader {
            padding-left: calc(#{$spacing-sm} + 2rem);

            .treeItemName {
                color: $gray-700;
                font-weight: 400;
            }

            &:hover {
                background: color.scale($primary-blue, $lightness: 50%);
            }

            &.selected {
                background: $primary-blue;
                color: white;

                .treeItemName {
                    color: white;
                }
            }
        }
    }

    .treeItemChildren {
        margin-left: $spacing-xs;
    }
}

// Loading and Error States
.loadingContainer {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 400px;
    color: $gray-600;

    .spinner {
        width: 2rem;
        height: 2rem;
        border: 2px solid $gray-300;
        border-top: 2px solid $primary-blue;
        border-radius: 50%;
        animation: spin 1s linear infinite;
        margin-bottom: $spacing-md;
    }
}

.errorContainer {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 400px;
    text-align: center;

    .errorMessage {
        color: $admin-danger;
        margin-bottom: $spacing-md;
        font-size: 0.875rem;
    }

    .retryButton {
        background: $primary-blue;
        color: white;
        border: none;
        padding: $spacing-sm $spacing-md;
        border-radius: 0.375rem;
        cursor: pointer;
        font-weight: 500;
        transition: all 0.2s ease-in-out;

        &:hover {
            background: color.scale($primary-blue, $lightness: -10%);
        }
    }
}

// Animations
@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

// Responsive Design
@media (max-width: 1024px) {
    .nodeContent {
        flex-direction: column;
    }

    .nodeTree,
    .nodeDetail {
        flex: none;
        height: 400px;
    }
}

@media (max-width: 768px) {
    .nodeManageHeader {
        flex-direction: column;
        align-items: stretch;
        gap: $spacing-sm;

        .refreshButton {
            align-self: flex-end;
        }
    }

    .nodeContent {
        gap: $spacing-md;
    }
}

// Table View Styles (동일한 스타일을 ChatLogsContent에서 가져옴)
.container {
    padding: 0;
    background: white;
    border-radius: 0.5rem;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    border: 1px solid $gray-200;
}

.controls {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: $spacing-md;
    border-bottom: 1px solid $gray-200;
    gap: $spacing-lg;
    background: $gray-50;
    min-height: 60px;
}

.searchContainer {
    flex: 0 0 250px;
    min-width: 200px;
}

.searchInput {
    width: 100%;
    padding: $spacing-sm $spacing-md;
    border: 1px solid $gray-300;
    border-radius: 0.375rem;
    font-size: 0.875rem;
    color: $gray-900;
    background: white;
    transition: all 0.2s ease-in-out;

    &:focus {
        outline: none;
        border-color: $primary-blue;
        box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
    }

    &::placeholder {
        color: $gray-400;
    }
}

.stats {
    flex: 1;
    display: flex;
    gap: $spacing-sm;
    color: $gray-600;
    font-size: 0.875rem;
    justify-content: center;
    align-items: center;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    min-height: 40px;

    span {
        white-space: nowrap;
    }
}

.tableContainer {
    overflow-x: auto;
    max-height: 600px;
    overflow-y: auto;
}

.table {
    width: 100%;
    border-collapse: collapse;
    background: white;
    min-width: 1200px;
    font-family: inherit;

    th {
        background: $gray-50;
        padding: $spacing-sm;
        text-align: left;
        font-weight: 600;
        color: $gray-900;
        border-bottom: 2px solid $gray-200;
        position: sticky;
        top: 0;
        z-index: 20;
        white-space: nowrap;
        font-size: 0.75rem;

        &.sortable {
            cursor: pointer;
            user-select: none;
            z-index: 21;

            &:hover {
                background: white;
            }
        }
    }

    td {
        padding: $spacing-sm;
        border-bottom: 1px solid $gray-100;
        vertical-align: middle;
        font-size: 0.75rem;
        color: $gray-900;
        position: relative;
        z-index: 1;
    }

    tr:hover {
        background: rgba(0, 0, 0, 0.02);
        z-index: 5;

        td {
            z-index: 5;
        }
    }
}

.tableRow {
    transition: background 0.2s ease;
}

.sortIcon {
    margin-left: $spacing-xs;
    font-size: 0.75rem;
    color: $primary-blue;
}

.sortable {
    cursor: pointer;
    user-select: none;
    transition: all 0.2s ease-in-out;

    &:hover {
        background: white;
    }
}

.noData {
    text-align: center;
    padding: $spacing-xl $spacing-lg;
    color: $gray-400;
    font-style: italic;
}

// 테이블 셀 스타일
.categoryCell {
    min-width: 100px;
}

.categoryBadge {
    background: #e0f2fe;
    color: #0277bd;
    padding: 0.25rem 0.5rem;
    border-radius: 0.375rem;
    font-size: 0.75rem;
    font-weight: 600;
    text-align: center;
    border: 1px solid #81d4fa;
}

.functionCell {
    min-width: 100px;
}

.functionBadge {
    background: $gray-100;
    color: $gray-700;
    padding: 0.25rem 0.5rem;
    border-radius: 0.375rem;
    font-size: 0.75rem;
    font-weight: 500;
    text-align: center;
    border: 1px solid $gray-200;
}

.nodeNameCell {
    min-width: 180px;

    .nodeName {
        font-weight: 500;
        color: $gray-900;
        margin-bottom: 0.125rem;
    }

    .nodeId {
        font-size: 0.625rem;
        color: $gray-500;
        font-family: 'Monaco', 'Consolas', monospace;
    }
}

.dataCell {
    max-width: 200px;
    word-break: break-word;
    color: $gray-600;
    font-size: 0.75rem;
    line-height: 1.4;
}

.tagsCell {
    min-width: 150px;
}

.tagsList {
    display: flex;
    flex-wrap: wrap;
    gap: 0.25rem;
    align-items: center;
}

.tagBadge {
    background: $gray-100;
    color: $gray-600;
    padding: 0.125rem 0.375rem;
    border-radius: 0.25rem;
    font-size: 0.625rem;
    font-weight: 500;
}

.tagMore {
    color: $gray-400;
    font-size: 0.625rem;
    font-weight: 500;
}

.countCell {
    text-align: center;
    min-width: 60px;
}

.countBadge {
    background: $gray-100;
    color: $gray-700;
    padding: 0.25rem 0.5rem;
    border-radius: 0.375rem;
    font-size: 0.75rem;
    font-weight: 500;
    min-width: 24px;
    display: inline-block;
    text-align: center;
}

// 상태 관련 스타일
.statusCell {
    text-align: center;
    min-width: 80px;
}

.statusBadge {
    padding: 0.25rem 0.5rem;
    border-radius: 0.375rem;
    font-size: 0.75rem;
    font-weight: 500;
    text-align: center;
    display: inline-block;
    min-width: 60px;

    &.enabled {
        background: #d4edda;
        color: #155724;
        border: 1px solid #c3e6cb;
    }

    &.disabled {
        background: #f8d7da;
        color: #721c24;
        border: 1px solid #f5c6cb;
    }
}

// 트리 뷰에서 비활성화된 노드 스타일
.disabledNode {
    opacity: 0.6;

    .treeItemName {
        text-decoration: line-through;
        color: $gray-400 !important;
    }
}

.disabledLabel {
    font-size: 0.75rem;
    color: $gray-400;
    font-weight: 400;
}

// 반응형 처리
@media (max-width: 1200px) {
    .controls {
        flex-wrap: wrap;
        gap: $spacing-md;
    }

    .stats {
        justify-content: flex-start;
        flex-wrap: wrap;
        min-height: auto;
    }
}

@media (max-width: 1024px) {
    .table {
        font-size: 0.75rem;

        th, td {
            padding: $spacing-xs $spacing-sm;
        }
    }

    .dataCell {
        max-width: 150px;
    }
}

@media (max-width: 768px) {
    .container {
        margin: 0 calc(-1 * $spacing-sm);
        border-radius: 0;
    }

    .controls {
        flex-direction: column;
        align-items: stretch;
        padding: $spacing-md;
    }

    .stats {
        font-size: 0.75rem;
        justify-content: center;
    }

    .table {
        font-size: 0.75rem;

        th, td {
            padding: $spacing-xs;
        }
    }

    .dataCell {
        max-width: 100px;
    }

    .nodeManageHeader {
        .tabButtons {
            width: 100%;

            .tabButton {
                flex: 1;
                justify-content: center;
            }
        }
    }
}
