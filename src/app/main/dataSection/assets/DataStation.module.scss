@use "sass:color";
@use "@/app/_common/_variables" as *;

.header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 2rem;
    flex-wrap: wrap;
    gap: 1rem;
}

.headerActions {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-left: auto;
}

// 새로고침 버튼 스타일
.refreshButton {
    background: transparent;
    border: 1px solid $gray-300;
    border-radius: 6px;
    padding: 0.5rem;
    cursor: pointer;
    color: $gray-600;
    transition: all 0.2s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 36px;
    height: 36px;

    &:hover:not(:disabled) {
        background: $gray-50;
        border-color: $primary-blue;
        color: $primary-blue;
    }

    &:disabled {
        cursor: not-allowed;
        opacity: 0.6;
    }

    svg {
        width: 16px;
        height: 16px;
    }
}

// 생성 버튼 스타일
.createButton {
    background: $primary-blue;
    border: none;
    border-radius: 6px;
    padding: 0.5rem 1rem;
    cursor: pointer;
    color: $white;
    transition: all 0.2s ease;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-weight: 500;
    font-size: 0.875rem;
    font-family: inherit;

    &:hover:not(:disabled) {
        background: color.scale($primary-blue, $lightness: -10%);
    }

    &:disabled {
        cursor: not-allowed;
        opacity: 0.6;
        background: $gray-400;
    }

    svg {
        width: 16px;
        height: 16px;
    }
}

// 스피닝 애니메이션
.spinning {
    animation: spin 1s linear infinite;
}

@keyframes spin {
    0% {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(360deg);
    }
}

// Managers Grid
.managersGrid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
    gap: 1.5rem;
}

.managerCard {
    background: $white;
    border: 1px solid $gray-200;
    border-radius: 0.75rem;
    padding: 1.5rem;
    transition: all 0.2s ease-in-out;

    &:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
        border-color: rgba($primary-blue, 0.3);
    }
}

.cardHeader {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 1rem;
}

.statusContainer {
    display: flex;
    flex-direction: row;
    gap: 0.5rem;
    align-items: flex-end;
}

.managerIcon {
    width: 2.5rem;
    height: 2.5rem;
    background: rgba($primary-blue, 0.1);
    border-radius: 0.5rem;
    display: flex;
    align-items: center;
    justify-content: center;

    svg {
        width: 1.25rem;
        height: 1.25rem;
        color: $primary-blue;
    }
}

.status {
    padding: 0.25rem 0.75rem;
    border-radius: 1rem;
    font-size: 0.75rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;

    &.statusActive {
        background: rgba($primary-green, 0.1);
        color: $primary-green;
    }

    &.statusInactive {
        background: rgba($gray-500, 0.1);
        color: $gray-500;
    }

    &.statusError {
        background: rgba($primary-red, 0.1);
        color: $primary-red;
    }
}

// Card Content
.cardContent {
    margin-bottom: 1rem;
}

.managerName {
    font-size: 1.125rem;
    font-weight: 600;
    color: $gray-900;
    margin: 0 0 0.5rem 0;
}

.managerDescription {
    color: $gray-600;
    line-height: 1.6;
    margin: 0 0 1rem 0;
    font-size: 0.875rem;
    font-family: monospace;
}

.memoryGrowth {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin-bottom: 1rem;
    padding: 0.5rem;
    background: rgba($primary-green, 0.05);
    border-radius: 0.375rem;
    border-left: 3px solid $primary-green;

    .growthLabel {
        font-size: 0.75rem;
        color: $gray-600;
        font-weight: 500;
    }

    .growthValue {
        font-size: 0.75rem;
        color: $primary-green;
        font-weight: 600;
        font-family: monospace;
    }
}

.managerMeta {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
}

.metaItem {
    display: flex;
    align-items: center;
    gap: 0.375rem;
    color: $gray-500;
    font-size: 0.75rem;

    svg {
        width: 0.75rem;
        height: 0.75rem;
    }
}

// Card Actions
.cardActions {
    display: flex;
    gap: 0.5rem;
    border-top: 1px solid $gray-200;
    padding-top: 1rem;
    align-items: center;
}

.inactiveMessage {
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 0.875rem;
    color: $gray-500;
    text-align: center;
    font-style: italic;
    flex: 1;
}

.actionButton {
    padding: 0.5rem;
    border: 1px solid $gray-300;
    background: $white;
    color: $gray-600;
    border-radius: 0.375rem;
    cursor: pointer;
    transition: all 0.2s ease-in-out;

    &:hover {
        background: $gray-50;
        color: $gray-900;
        border-color: $gray-400;
    }

    &.danger {
        &:hover {
            background: rgba($primary-red, 0.05);
            color: $primary-red;
            border-color: rgba($primary-red, 0.3);
        }
    }

    &.disabled {
        cursor: not-allowed;
        opacity: 0.35;
        pointer-events: none;
    }

    svg {
        width: 1rem;
        height: 1rem;
    }
}

// Loading State
.loadingState {
    text-align: center;
    padding: 4rem 2rem;
    color: $gray-500;

    p {
        font-size: 1.125rem;
        margin: 0;
    }
}

// Error State
.errorState {
    text-align: center;
    padding: 4rem 2rem;
    color: $primary-red;

    p {
        font-size: 1.125rem;
        margin: 0 0 1rem 0;
    }

    button {
        padding: 0.5rem 1rem;
        background: $primary-blue;
        color: $white;
        border: none;
        border-radius: 0.375rem;
        cursor: pointer;
        font-weight: 500;
        transition: background-color 0.2s ease-in-out;

        &:hover {
            background: color.scale($primary-blue, $lightness: -10%);
        }
    }
}

// Empty State
.emptyState {
    text-align: center;
    padding: 4rem 2rem;
    color: $gray-500;

    .emptyIcon {
        width: 4rem;
        height: 4rem;
        margin: 0 auto 1rem;
        opacity: 0.5;
        color: $primary-blue;
    }

    h3 {
        font-size: 1.5rem;
        font-weight: 600;
        margin: 0 0 1rem 0;
        color: $gray-800;
    }

    p {
        margin: 0 0 2rem 0;
        line-height: 1.6;
        font-size: 1rem;
        color: $gray-600;
    }
}

// 시작하기 버튼 스타일
.startButton {
    background: $primary-blue;
    border: none;
    border-radius: 8px;
    padding: 0.75rem 2rem;
    cursor: pointer;
    color: $white;
    transition: all 0.2s ease;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    font-weight: 600;
    font-size: 1rem;
    font-family: inherit;

    &:hover:not(:disabled) {
        background: color.scale($primary-blue, $lightness: -10%);
        transform: translateY(-1px);
        box-shadow: 0 4px 12px rgba($primary-blue, 0.3);
    }

    &:disabled {
        cursor: not-allowed;
        opacity: 0.6;
        background: $gray-400;
    }

    svg {
        width: 18px;
        height: 18px;
    }
}

// Responsive Design
@media (max-width: 768px) {
    .header {
        flex-direction: column;
        align-items: stretch;
    }

    .headerActions {
        justify-content: center;
        margin-left: 0;
    }

    .managersGrid {
        grid-template-columns: 1fr;
    }

    .managerMeta {
        flex-direction: column;
        gap: 0.5rem;
    }
}

// /assets/DataStation.module.scss에 추가
.versionInfo {
    margin-top: 12px;
    padding-top: 12px;
    border-top: 1px solid rgba(255, 255, 255, 0.1);
    display: flex;
    flex-direction: column;
    gap: 8px;

    .versionBadge {
        display: inline-flex;
        align-items: center;
        gap: 6px;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 4px 10px;
        border-radius: 6px;
        font-size: 12px;
        font-weight: 600;
        width: fit-content;

        svg {
            font-size: 14px;
        }
    }

    .datasetId {
        font-size: 11px;
        color: #888;
        font-family: 'Courier New', monospace;
    }
}

.datasetVersionInfo {
    margin-top: 12px;
    padding: 12px;
    background: rgba(52, 152, 219, 0.1);
    border-left: 3px solid #3498db;
    border-radius: 6px;
    display: flex;
    flex-direction: column;
    gap: 8px;

    .versionBadgeRow {
        display: flex;
        align-items: center;
        gap: 8px;
        flex-wrap: wrap;
    }

    .datasetVersionBadge {
        display: inline-flex;
        align-items: center;
        gap: 6px;
        background: linear-gradient(135deg, #3498db 0%, #2980b9 100%);
        color: white;
        padding: 5px 12px;
        border-radius: 6px;
        font-size: 13px;
        font-weight: 700;
        box-shadow: 0 2px 8px rgba(52, 152, 219, 0.3);
        transition: all 0.3s;

        &:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(52, 152, 219, 0.4);
        }

        svg {
            font-size: 14px;
        }
    }

    .reloadedBadge {
        display: inline-flex;
        align-items: center;
        background: linear-gradient(135deg, #f39c12 0%, #e67e22 100%);
        color: white;
        padding: 4px 10px;
        border-radius: 4px;
        font-size: 11px;
        font-weight: 600;
        box-shadow: 0 2px 6px rgba(243, 156, 18, 0.3);
    }

    .datasetId {
        font-size: 11px;
        color: #7f8c8d;
        font-family: 'Courier New', monospace;
        background: rgba(255, 255, 255, 0.05);
        padding: 4px 8px;
        border-radius: 4px;
        max-width: 100%;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        display: block;
    }
}

.versionInfo {
    margin-top: 8px;
    padding-top: 8px;
    border-top: 1px solid rgba(255, 255, 255, 0.1);
    display: flex;
    flex-direction: column;
    gap: 6px;

    .versionBadge {
        display: inline-flex;
        align-items: center;
        gap: 6px;
        background: linear-gradient(135deg, #9b59b6 0%, #8e44ad 100%);
        color: white;
        padding: 4px 10px;
        border-radius: 6px;
        font-size: 11px;
        font-weight: 600;
        width: fit-content;
        box-shadow: 0 2px 6px rgba(155, 89, 182, 0.3);

        svg {
            font-size: 12px;
        }
    }
}

// 기존 스타일 유지하고 아래 추가

.statusContainer {
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.syncBadge {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 24px;
    height: 24px;
    border-radius: 50%;
    
    svg {
        font-size: 0.875rem;
    }
    
    &.syncActive {
        background: rgba(34, 197, 94, 0.2);
        color: #22c55e;
        
        svg {
            animation: spin 2s linear infinite;
        }
    }
    
    &.syncPaused {
        background: rgba(251, 191, 36, 0.2);
        color: #fbbf24;
    }
}

.syncInfo {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
    padding: 0.5rem 0;
    border-top: 1px solid rgba(255, 255, 255, 0.1);
    margin-top: 0.5rem;
    
    .syncLabel {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.875rem;
        color: rgba(255, 255, 255, 0.8);
        
        svg {
            font-size: 1rem;
            color: #3b82f6;
        }
    }
    
    .lastSyncTime {
        font-size: 0.75rem;
        color: rgba(255, 255, 255, 0.5);
        margin-left: 1.5rem;
    }
}

@keyframes spin {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}