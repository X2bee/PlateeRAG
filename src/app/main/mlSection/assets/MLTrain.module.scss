@use "sass:color";
@use "@/app/_common/_variables" as *;

// Container
.container {
    max-width: 1450px;
    margin: 0 auto;
}

// Content Area
.contentArea {
    background: $white;
    border-radius: $radius-lg;
    box-shadow: $shadow-sm;
    padding: $spacing-xl;
    min-height: calc(100vh - 4rem);
    transition: margin-left 0.3s ease-in-out;
}

// Header
.header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 2rem;
    gap: 2rem;

    @media (max-width: 768px) {
        flex-direction: column;
        align-items: center;
        text-align: center;
        gap: 1rem;
    }
}

.headerContent {
    flex: 1;

    h2 {
        font-size: 1.875rem;
        font-weight: 700;
        color: $gray-900;
        margin: 0 0 0.5rem 0;
    }

    p {
        font-size: 1rem;
        color: $gray-600;
        margin: 0;
        line-height: 1.5;
    }
}

// Tab Navigation
.tabNavigation {
    display: flex;
    background: $gray-50;
    border: 1px solid $gray-200;
    border-radius: 0.75rem 0.75rem 0 0;
    overflow: hidden;
}

.tabButton {
    flex: 1;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    padding: 1rem 1.5rem;
    background: transparent;
    border: none;
    color: $gray-600;
    font-size: 0.875rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.1s ease-in-out;
    border-bottom: 2px solid transparent;

    &:hover {
        background: $gray-100;
        color: $gray-800;
    }

    &.active {
        background: $white;
        color: $primary-blue;
        border-bottom-color: $primary-blue;
    }

    svg {
        font-size: 1rem;
    }
}

// Config wrapper
.configWrapper {
    background: $white;
    border: 1px solid $gray-200;
    border-radius: 0 0 0.75rem 0.75rem;
    border-top: none;
}

// Config Section
.configSection {
    padding: 2rem;
}

// Form styles
.configForm {
    display: flex;
    flex-direction: column;
}

.formGroup {
    margin-bottom: 1.5rem;
    padding: 1.5rem;
    background: $gray-50;
    border-radius: 0.75rem;
    border: 1px solid $gray-200;
    transition: all 0.1s ease-in-out;

    &:hover {
        border-color: $gray-300;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
    }

    &:last-child {
        margin-bottom: 0;
    }
}

.configHeader {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin-bottom: 1.25rem;
    padding-bottom: 0.75rem;
    border-bottom: 1px solid $gray-300;

    label {
        font-size: 1.125rem;
        font-weight: 600;
        color: $gray-800;
        margin: 0;
    }

    .required {
        color: $primary-red;
        font-weight: 700;
    }
}

// Form Grid
.formGrid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1rem;
    margin-bottom: 0.5rem;

    @media (max-width: 768px) {
        grid-template-columns: 1fr;
    }
}

.formField {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
}

.formLabel {
    font-weight: 500;
    color: $gray-700;
    font-size: 0.875rem;
    margin-bottom: 0.25rem;

    &.required::after {
        content: " *";
        color: $primary-red;
    }
}

// 공통 입력 필드 스타일
%formInputBase {
    padding: 0.75rem;
    border: 1px solid $gray-300;
    border-radius: 0.5rem;
    font-size: 0.875rem;
    background: $white;
    color: $gray-900;
    font-family: inherit;
    line-height: 1.5;
    transition: all 0.2s ease-in-out;

    &:focus {
        outline: none;
        border-color: $primary-blue;
        box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
    }

    &:disabled {
        background: $gray-50;
        color: $gray-500;
        cursor: not-allowed;
        opacity: 0.7;
    }

    &:hover:not(:disabled):not(:focus) {
        border-color: $gray-400;
    }
}

.formInput {
    @extend %formInputBase;

    &::placeholder {
        color: $gray-400;
    }
}

.formSelect {
    @extend %formInputBase;
    cursor: pointer;
    appearance: none;
    background-image: url("data:image/svg+xml;charset=utf-8,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
    background-position: right 0.75rem center;
    background-repeat: no-repeat;
    background-size: 1rem;
    padding-right: 2.5rem;

    option {
        padding: 0.5rem 0.75rem;
        background: $white;
        color: $gray-900;
        font-size: 0.875rem;

        &:hover {
            background: $gray-50;
        }

        &:disabled {
            color: $gray-400;
            background: $gray-100;
        }
    }

    &:focus {
        background-image: url("data:image/svg+xml;charset=utf-8,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%233b82f6' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
    }
}

.formRow {
    margin-bottom: 1rem;
}

// Checkbox group
.checkboxGroup {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    margin-top: 1rem;
}

.checkboxLabel {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.875rem;
    color: $gray-700;
    cursor: pointer;
    user-select: none;
    padding: 0.25rem 0.5rem;
    border-radius: 0.5rem;
    transition: all 0.2s ease-in-out;

    &:hover {
        color: $gray-900;
        background: $gray-100;
    }

    &.highlighted {
        background: rgba(59, 130, 246, 0.1);
        color: $primary-blue;
        font-weight: 500;

        &:hover {
            background: rgba(59, 130, 246, 0.15);
            color: color.adjust($primary-blue, $lightness: -10%);
        }
    }

    &.disabled {
        opacity: 0.5;
        cursor: not-allowed;
        color: $gray-400;

        &:hover {
            background: transparent;
            color: $gray-400;
        }
    }
}

.checkbox {
    width: 1rem;
    height: 1rem;
    border: 1px solid $gray-300;
    border-radius: 3px;
    cursor: pointer;
    transition: all 0.2s ease-in-out;

    &:checked {
        background: $primary-blue;
        border-color: $primary-blue;
    }

    &:focus {
        outline: none;
        box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
    }
}

// Button styles
.button {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.625rem 1.25rem;
    border-radius: 0.5rem;
    font-size: 0.875rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s ease-in-out;
    border: 1px solid transparent;

    &:disabled {
        opacity: 0.6;
        cursor: not-allowed;
    }

    &.primary {
        background-color: $primary-blue;
        color: $white;

        &:hover:not(:disabled) {
            background-color: color.adjust($primary-blue, $lightness: -7%);
        }
    }

    &.secondary {
        background-color: $white;
        color: $gray-700;
        border-color: $gray-300;

        &:hover:not(:disabled) {
            background-color: $gray-50;
            border-color: $gray-400;
        }
    }

    &.large {
        padding: 0.875rem 2rem;
        font-size: 1rem;
    }
}

.userScriptCTA {
    margin-top: 1.5rem;
    padding: 1.25rem 1.5rem;
    background: $gray-50;
    border: 1px solid $gray-200;
    border-radius: 0.75rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 1.25rem;

    @media (max-width: 768px) {
        flex-direction: column;
        align-items: flex-start;
    }
}

.userScriptCTAContent {
    display: flex;
    flex-direction: column;
    gap: 0.35rem;
}

.userScriptCTATitle {
    font-size: 1rem;
    font-weight: 600;
    color: $gray-800;
}

.userScriptCTADescription {
    font-size: 0.875rem;
    color: $gray-600;
    line-height: 1.45;
}

.userScriptWorkspace {
    margin-top: 1.5rem;
}

// Action buttons
.formActions {
    display: flex;
    justify-content: space-between;
    padding: 2rem;
    border-top: 1px solid $gray-200;

    .actionGroup {
        display: flex;
        gap: 1rem;
    }
}

// Results section
.resultsSection {
    margin-top: 2rem;
    padding: 1.5rem;
    background: $gray-50;
    border-radius: 0.75rem;
    border: 1px solid $gray-200;
}

.resultsHeader {
    font-size: 1.125rem;
    font-weight: 600;
    color: $gray-800;
    margin-bottom: 1rem;
    padding-bottom: 0.75rem;
    border-bottom: 1px solid $gray-300;
}

.resultsContent {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.modelResult {
    padding: 1rem;
    background: $white;
    border-radius: 0.5rem;
    border: 1px solid $gray-200;

    .modelName {
        font-weight: 600;
        color: $gray-800;
        margin-bottom: 0.5rem;
    }

    .modelMetrics {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 0.5rem;
        font-size: 0.875rem;
        color: $gray-600;
    }

    &.bestModel {
        border-color: $primary-blue;
        background: rgba(59, 130, 246, 0.02);

        .modelName {
            color: $primary-blue;
        }
    }
}

// Loading spinner
.spinner {
    width: 1rem;
    height: 1rem;
    border: 2px solid transparent;
    border-top: 2px solid currentColor;
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

@keyframes spin {
    to {
        transform: rotate(360deg);
    }
}

// Responsive design
@media (max-width: 768px) {
    .container {
        margin: 0;
        padding: 1rem;
    }

    .configSection {
        padding: 1rem;
    }

    .formGrid {
        grid-template-columns: 1fr;
        gap: 0.75rem;
    }

    .checkboxGroup {
        flex-direction: column;
        gap: 0.75rem;
    }

    .tabButton {
        padding: 0.75rem 1rem;
        font-size: 0.75rem;
    }

    .formActions {
        flex-direction: column;
        gap: 1rem;

        .actionGroup {
            justify-content: center;
        }
    }
}

.dataSourceToggle {
    display: inline-flex;
    background: $gray-100;
    border-radius: 0.75rem;
    padding: 0.375rem;
    gap: 0.375rem;
    box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.08);
}

.toggleButton {
    padding: 0.75rem 1.5rem;
    border-radius: 0.5rem;
    border: none;
    background: transparent;
    color: $gray-600;
    font-weight: 500;
    font-size: 0.875rem;
    cursor: pointer;
    transition: all 0.2s ease-in-out;
    display: flex;
    align-items: center;
    gap: 0.5rem;

    &:hover {
        color: $gray-800;
    }

    &.active {
        background: $white;
        color: $primary-blue;
        font-weight: 600;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.08), 0 1px 2px rgba(0, 0, 0, 0.06);
    }
}

// Dataset List (새로 추가)
.datasetList {
    max-height: 450px;
    overflow-y: auto;
    border: 1px solid $gray-200;
    border-radius: 0.75rem;
    background: $white;

    &::-webkit-scrollbar {
        width: 8px;
    }

    &::-webkit-scrollbar-track {
        background: $gray-50;
        border-radius: 0 0.75rem 0.75rem 0;
    }

    &::-webkit-scrollbar-thumb {
        background: $gray-300;
        border-radius: 4px;

        &:hover {
            background: $gray-400;
        }
    }
}

.datasetCard {
    padding: 1.25rem;
    cursor: pointer;
    background: $white;
    transition: all 0.2s ease-in-out;
    position: relative;

    &:not(:last-child) {
        border-bottom: 1px solid $gray-100;
    }

    &:hover {
        background: $gray-50;
    }

    &.selected {
        background: linear-gradient(135deg, #eff6ff 0%, #dbeafe 100%);
        border-left: 4px solid $primary-blue;
        padding-left: calc(1.25rem - 4px);

        &:hover {
            background: linear-gradient(135deg, #dbeafe 0%, #bfdbfe 100%);
        }
    }
}

.datasetCardHeader {
    display: flex;
    justify-content: space-between;
    align-items: start;
    margin-bottom: 0.75rem;
}

.datasetName {
    font-weight: 600;
    color: $gray-900;
    font-size: 1rem;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin-bottom: 0.5rem;
}

.experimentName {
    font-size: 0.875rem;
    color: $gray-600;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin-bottom: 0.75rem;
}

.datasetMetrics {
    display: flex;
    flex-wrap: wrap;
    gap: 0.625rem;
    font-size: 0.75rem;
}

.metricBadge {
    background: $gray-100;
    padding: 0.25rem 0.75rem;
    border-radius: 0.375rem;
    font-weight: 500;
    color: $gray-700;
    white-space: nowrap;

    &.format {
        background: #fef3c7;
        color: #92400e;
        font-weight: 600;
    }
}

.selectedBadge {
    position: absolute;
    top: 1.25rem;
    right: 1.25rem;
    background: $primary-blue;
    color: $white;
    padding: 0.375rem 0.875rem;
    border-radius: 999px;
    font-size: 0.75rem;
    font-weight: 600;
    box-shadow: 0 2px 4px rgba(59, 130, 246, 0.3);
}

// Empty State (새로 추가)
.emptyState {
    text-align: center;
    padding: 3rem 2rem;
    color: $gray-500;
    background: $gray-50;
    border-radius: 0.75rem;
    border: 2px dashed $gray-300;

    .emptyIcon {
        font-size: 2.5rem;
        margin-bottom: 0.75rem;
        opacity: 0.5;
    }

    .emptyText {
        font-size: 0.875rem;
        font-weight: 500;
        color: $gray-600;
    }
}

// Loading State (새로 추가)
.loadingState {
    @extend .emptyState;
    border-style: solid;

    .loadingSpinner {
        width: 2rem;
        height: 2rem;
        border: 3px solid $gray-200;
        border-top-color: $primary-blue;
        border-radius: 50%;
        animation: spin 0.8s linear infinite;
        margin: 0 auto 1rem;
    }
}

// Success Box (새로 추가)
.successBox {
    margin-top: 1rem;
    padding: 1.25rem;
    background: linear-gradient(135deg, #f0fdf4 0%, #dcfce7 100%);
    border-radius: 0.75rem;
    border: 2px solid #86efac;

    .successHeader {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-weight: 600;
        color: #166534;
        margin-bottom: 0.75rem;
        font-size: 0.9375rem;
    }

    .successContent {
        font-size: 0.875rem;
        color: #15803d;
        font-weight: 500;
    }

    .successDetail {
        font-size: 0.75rem;
        color: #16a34a;
        margin-top: 0.375rem;
    }
}

// Error Box (새로 추가)
.errorBox {
    padding: 1rem 1.25rem;
    background: #fef2f2;
    border: 1px solid #fecaca;
    border-radius: 0.75rem;
    color: #dc2626;
    display: flex;
    align-items: start;
    gap: 0.75rem;

    .errorIcon {
        font-size: 1.25rem;
        flex-shrink: 0;
    }

    .errorText {
        font-size: 0.875rem;
        line-height: 1.5;
    }
}

// Column Selection (새로 추가)
.columnInfo {
    border: 1px solid $gray-200;
    border-radius: 0.75rem;
    padding: 1.25rem;
    background: linear-gradient(135deg, #f9fafb 0%, #f3f4f6 100%);
    margin-bottom: 1.5rem;
}

.columnInfoHeader {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-weight: 600;
    margin-bottom: 0.75rem;
    color: $gray-800;
    font-size: 0.9375rem;
}

.columnInfoDescription {
    font-size: 0.75rem;
    color: $gray-600;
    margin-bottom: 1rem;
}

.columnGrid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
    gap: 0.625rem;
}

.columnItem {
    padding: 0.75rem;
    background: $white;
    border: 1px solid $gray-200;
    border-radius: 0.5rem;
    font-size: 0.8125rem;
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.04);
    transition: all 0.2s ease-in-out;

    &:hover {
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.08);
        transform: translateY(-1px);
    }

    .columnName {
        font-weight: 600;
        color: $gray-900;
        margin-bottom: 0.375rem;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    .columnType {
        font-size: 0.6875rem;
        color: $gray-600;
        background: $gray-100;
        padding: 0.125rem 0.5rem;
        border-radius: 0.25rem;
        display: inline-block;
    }
}

// Feature Selection Area (새로 추가)
.featureSelection {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    padding: 1rem;
    border: 2px dashed $gray-300;
    border-radius: 0.5rem;
    background: $white;
    min-height: 120px;
    transition: all 0.2s ease-in-out;

    &:hover {
        border-color: $gray-400;
        background: $gray-50;
    }

    &.hasSelection {
        border-style: solid;
        border-color: rgba(59, 130, 246, 0.3);
        background: rgba(59, 130, 246, 0.02);
    }
}

.featureChip {
    padding: 0.5rem 0.875rem;
    border-radius: 0.5rem;
    border: 1px solid $gray-300;
    background: $white;
    color: $gray-700;
    font-size: 0.8125rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.15s ease-in-out;
    user-select: none;

    &:hover {
        border-color: $gray-400;
        background: $gray-50;
        transform: translateY(-1px);
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.08);
    }

    &.selected {
        border: 2px solid $primary-blue;
        background: #eff6ff;
        color: #1e40af;
        font-weight: 600;
        box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);

        &:hover {
            background: #dbeafe;
            border-color: color.adjust($primary-blue, $lightness: -7%);
        }
    }
}

.featureSummary {
    margin-top: 1rem;
    padding: 1rem;
    background: linear-gradient(135deg, #f0fdf4 0%, #dcfce7 100%);
    border-radius: 0.75rem;
    border: 2px solid #86efac;

    .summaryHeader {
        font-size: 0.875rem;
        color: #15803d;
        font-weight: 600;
        margin-bottom: 0.5rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .summaryList {
        font-size: 0.75rem;
        color: #16a34a;
        line-height: 1.6;
    }
}

// Responsive updates
@media (max-width: 768px) {
    .dataSourceToggle {
        width: 100%;
        
        .toggleButton {
            flex: 1;
            justify-content: center;
            padding: 0.625rem 1rem;
            font-size: 0.8125rem;
        }
    }

    .datasetCard {
        padding: 1rem;
    }

    .datasetMetrics {
        gap: 0.5rem;
    }

    .columnGrid {
        grid-template-columns: 1fr;
    }

    .featureSelection {
        min-height: 100px;
        padding: 0.75rem;
    }

    .featureChip {
        flex: 1 1 100%;
        text-align: center;
    }
}

// Animation
@keyframes slideIn {
    from {
        opacity: 0;
        transform: translateY(-10px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.datasetCard,
.columnItem,
.featureChip {
    animation: slideIn 0.2s ease-out;
}
